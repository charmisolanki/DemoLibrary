//apply plugin: 'com.android.application'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.android.library'



android {
    compileSdkVersion 30
    buildToolsVersion "29.0.3"

    defaultConfig {
//        applicationId "com.demolibrary"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 4
        versionName "3.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildTypes.each {
        it.buildConfigField 'String', "CUSTOMER_ID", customer_id

    }

   defaultPublishConfig "liquidRelease"

    flavorDimensions "solidity"

    productFlavors {

        solid{
            dimension "solidity"

//            applicationId "com.solid"
            minSdkVersion 21
            targetSdkVersion 30
            versionCode 1
            versionName "1.0"
        }

        liquid{
            dimension "solidity"

//            applicationId "com.liquid"
            minSdkVersion 21
            targetSdkVersion 30
            versionCode 1
            versionName "1.0"
        }
        }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    }

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

}

//group = 'com.github.charmisolanki.DemoLibrary'
//
//if (android.productFlavors.size() > 0) {
//    android.libraryVariants.all { variant ->
//        if (variant.name.toLowerCase().contains("debug")) {
//            return
//        }
//
//        def bundleTask = tasks["bundle${variant.name.capitalize()}"]
//
//        artifacts {
//            archives(bundleTask.archivePath) {
//                classifier variant.flavorName
//                builtBy bundleTask
//                name = project.name
//            }
//        }
//    }
//}
